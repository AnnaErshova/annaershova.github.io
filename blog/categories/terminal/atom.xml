<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Terminal | Anna's Blog]]></title>
  <link href="http://annaershova.github.io/blog/categories/terminal/atom.xml" rel="self"/>
  <link href="http://annaershova.github.io/"/>
  <updated>2015-10-26T09:38:27-04:00</updated>
  <id>http://annaershova.github.io/</id>
  <author>
    <name><![CDATA[Anna Ershova]]></name>
    <email><![CDATA[anna.ershova@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mastering Your Terminal -- Part III]]></title>
    <link href="http://annaershova.github.io/blog/2015/10/20/mastering-your-terminal-part-iii/"/>
    <updated>2015-10-20T23:24:26-04:00</updated>
    <id>http://annaershova.github.io/blog/2015/10/20/mastering-your-terminal-part-iii</id>
    <content type="html"><![CDATA[<p><strong>Shutting Down Your Mac From Your Terminal:</strong></p>

<p><strong><code>sudo shutdown -r now</code></strong></p>

<p><strong><code>shutdown</code></strong> is the command you need.</p>

<p>Pass in the following options:</p>

<ul>
<li><strong><code>-h</code></strong> &ndash; halt the session, re-starts the system</li>
<li><strong><code>-s</code></strong> &ndash; sleep</li>
<li><strong><code>-r</code></strong> &ndash; re-boot the system</li>
<li><strong><code>-k</code></strong> &ndash; kick everyone off but the super-user</li>
</ul>


<p>And as for time options:</p>

<ul>
<li><strong><code>now</code></strong> &ndash; execute command immediately</li>
<li><strong><code>+integer</code></strong> &ndash; execute command in x minutes (e.g., <strong><code>+10</code></strong> is in 10 minutes)</li>
<li><strong><code>yymmddhhmm</code></strong> &ndash; execute command on a given time and date</li>
</ul>


<p>If you schedule a <strong><code>shutdown</code></strong> command, but decide to hold off of it, <strong><code>sudo shutdown -c</code></strong> will cancel it.</p>

<p>In my understanding, <strong><code>sudo shutdown -r now</code></strong> is a functional equivalent of <strong><code>sudo reboot</code></strong></p>

<p>All those commands can be followed by a message that can be seen by other users who are logged in, for instance, <strong><code>sudo shutdown -r now 'Re-starting Now'</code></strong>.</p>

<hr />

<p><strong>Changing What Your Power Button Does:</strong></p>

<p>In the OS X prior to the 10.9 Maverick, a power button used to bring up a <strong><code>Restart</code></strong>, <strong><code>Sleep</code></strong>, <strong><code>Cancel</code></strong>, and <strong><code>Shut Down</code></strong> options.</p>

<p>In later OS X versions, pressing it just puts your machine to sleep. If you want to have it bring up an earlier options menu, run this:</p>

<p><strong><code>defaults write com.apple.loginwindow PowerButtonSleepsSystem -bool FALSE</code></strong></p>

<p>Pressing the power button will then bring up this dialog:</p>

<p><img class="center" src="/images/powerbuttondialog.png"></p>

<p>If you want to switch back to the sleep-only option, run the same command with <strong><code>TRUE</code></strong> instead of <strong><code>FALSE</code></strong>.</p>

<hr />

<p><strong>Having Your System Restart Automatically If It Freezes:</strong></p>

<p>While Macs tend to have relatively good uptimes (see <a href="http://annaershova.github.io/blog/2015/10/12/mac-uptime-and-reboot-stats/">here</a> for more info what that is and how to find it out), OS X can still freeze up. Most users press the power button for a couple of seconds to have it turn off, and then press it again to turn it back on. That generally works well, but you can also type this in your Terminal to have its equivalent happen automatically:</p>

<p><strong><code>sudo systemsetup -setrestartfreeze on</code></strong></p>

<p>(It&rsquo;s also useful if you are not there physically to press the restart button, for instance, if your Mac acts as a server.)</p>

<p>To disable this option, run the same command with <strong><code>OFF</code></strong> instead of <strong><code>ON</code></strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mastering Your Terminal -- Part II]]></title>
    <link href="http://annaershova.github.io/blog/2015/10/19/mastering-your-terminal-part-ii/"/>
    <updated>2015-10-19T23:24:32-04:00</updated>
    <id>http://annaershova.github.io/blog/2015/10/19/mastering-your-terminal-part-ii</id>
    <content type="html"><![CDATA[<p><strong>Finding your way around: </strong><code>find</code><strong>, </strong><code>mdfind</code><strong>, and </strong><code>locate</code><strong> </strong></p>

<hr />

<p><strong><code>find</code></strong></p>

<ul>
<li><strong><code>find</code></strong> &ldquo;walks a file hierarchy.&rdquo; You can always search for files using Spotlight, but it is' easy on your Terminal as well.</li>
<li><strong><code>find path/to/search -name name_to_search_for</code></strong> to search for a specific file name</li>
<li><strong><code>find / -name name_to_search_for</code></strong> to search your entire computer</li>
<li><strong><code>find ~ -name name_to_search_for</code></strong> to search your user directory</li>
<li><strong><code>find path/to/search -iname name_to_search_for</code></strong> &ndash; add the <strong><code>-i</code></strong> flag to do a case-insensitive match.</li>
<li><strong><code>find path/to/search -size name_to_search_for</code></strong> to search for a specific file size</li>
<li><strong><code>find path/to/search -type name_to_search_for</code></strong> to search for a specific file type</li>
</ul>


<p>As usual, there are many other search options that running <strong><code>man</code></strong> find will showcase, and they can be stacked together to filter results.</p>

<hr />

<p><strong><code>mdfind</code></strong></p>

<ul>
<li><strong><code>mdfind query</code></strong> &ldquo;finds files matching a given query&rdquo; as per its manual. It uses metadata to search for queries, so it is basically a shell for your Spotlight search. Metadata, or data about data itself, is at the core of Spotlight &ndash; that is how pressing <strong><code>âŒ˜ space bar</code></strong> and entering &lsquo;Ruby&rsquo; will show you a list of all documents that mention Ruby.</li>
<li><strong><code>mdfind query</code></strong>  note that the query does not have to be 1 word, but can be several.</li>
<li><strong><code>mdfind image</code></strong> will find all image files (if you run it from any directory, it will still search for all images for an existing user, just like Spotlight does). If you run it, and it starts giving you an endless output of image file paths, just run <strong><code>Ctrl + C</code></strong> to stop it.</li>
<li><strong><code>mdfind image -onlyin path/to/directory</code></strong> searches for all images in a certain directory</li>
</ul>


<p><img class="center" src="/images/mdfindonlyin.png"></p>

<ul>
<li><p><strong><code>mdfind *query* -onlyin path/to/directory/1 -onlyin path/to/directory/2</code></strong> paths can be stacked just like other queries.</p></li>
<li><p><strong><code>mdfind query -onlyin $PWD</code></strong> to search in a current directory.</p></li>
</ul>


<p><img class="center" src="/images/onlyin_pwd.png"></p>

<ul>
<li><strong><code>mdfind query -live</code></strong> watches outcome of a search for a certain query. So if a file with a matching metadata is added, the terminal tab/window in which you are running that command will show that file.</li>
</ul>


<p><img class="center" src="/images/onlyin_pwd.png"></p>

<p><strong> Boolean operators and </strong><code>mdfind</code><strong>: </strong></p>

<p>You are probably familiar with boolean operators if you are developer. <strong><code>mdfind</code></strong> uses a very simplified version of them:</p>

<ul>
<li><p><strong><code>mdfind query1|query2</code></strong> &ndash; OR; note no whitespace</p></li>
<li><p><strong><code>mdfind query1(-query2</code>)</strong> &ndash; excludes query 2; note no whitespace</p></li>
<li><p>Use <strong><code>()</code></strong> to group queries. To find matches to 2 queries, use <code>mdfind (query1 query2)</code>** as <code>mdfind query1 query2</code> will only search for the second word.</p></li>
<li><p>Use <code>""</code> to escape apostrophes, otherwise your Terminal will think your query is incomplete.</p></li>
</ul>


<p><img class="center" src="/images/mdfind_apostrophe.png"></p>

<hr />

<p><strong><code>locate</code></strong></p>

<ul>
<li><strong><code>locate</code></strong> &ldquo;find filenames quickly.&rdquo; <em>Quickly</em> is the keyword here. It relies on an index database of all filenames to find the one you need. Think of it as a cookbook index: instead of parsing throughout every recipe that uses shiitake mushrooms, you go straight to the index in the back. look for shiitake, and it tells you where to look for it. The problem with it is that the index is only updated once a week or so, so if you are looking for a newly created file, it may not come up.</li>
</ul>


<p><img class="center" src="/images/locate_turkey.png"></p>

<ul>
<li>Using <strong><code>locate</code></strong> for the first time ever or after a major system update can cause a following error: &ldquo;WARNING: The locate database (/var/db/locate.database) does not exist.&rdquo;</li>
</ul>


<p><img class="center" src="/images/locate_missing_database.png"></p>

<p>Follow the instructions to generate an index database; it will take some time to run as it will go through every file on your system to generate its index (in cookbook terms, someone had to go through and read every recipe and list every ingredient in the index.) It actually does not alert you to the fact it is being generated in the background, but it should work fine and if you run the command again an hour or so later, the database should be there.</p>

<p>You can receive instructions your index database is outdates, in which case you similarly need to follow instructions to rebuild it.</p>

<ul>
<li>Note that both <strong><code>find</code></strong> and <strong><code>locate</code></strong> are case-sensitive when it comes to file names. Use <strong><code>-i</code></strong> flag to make them case-insensitive.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mastering Your Terminal -- Part I]]></title>
    <link href="http://annaershova.github.io/blog/2015/10/19/mastering-your-terminal-part-i/"/>
    <updated>2015-10-19T16:15:58-04:00</updated>
    <id>http://annaershova.github.io/blog/2015/10/19/mastering-your-terminal-part-i</id>
    <content type="html"><![CDATA[<p>Developers tend to spend a lot of time in their Terminals, and while most know all the basic commands to run, there are some that are less commonly used, but quite nifty to know.</p>

<p>In an <a href="http://annaershova.github.io/blog/2015/10/12/updating-os-x-from-your-command-line/">earlier post</a>, I mentioned that one can use command line to run a software update command: <code>softwareupdate -l</code> to see what updates are available:</p>

<p><img class="center" src="/images/softwareupdate_list.png"></p>

<p>Terminal, or more accurately, Terminal.app, is a terminal emulator program that provides a connection to your shell (most likely <strong><code>bash</code></strong>; run <strong><code>echo $0</code></strong> to see what yours is running).</p>

<p>Technically speaking, running commands in Terminal is really running commands in a command-line interface that runs in a shell that runs in Terminal.</p>

<p>Now that we got that out of the way &ndash;</p>

<p><strong>Some basic tricks</strong>:</p>

<ul>
<li><p><strong><code>Up</code></strong> or <strong><code>down</code></strong> key to navigate between commands. I use <strong><code>up</code></strong> all the time when navigating to a previously used command that is too long to type again.</p></li>
<li><p><strong><code>!!</code></strong> to repeat last command (this will be specific to your Terminal window or tab in which you run it)</p></li>
</ul>


<p><img class="center" src="/images/bang_bang.png"></p>

<p>Ok, it is actually easier to press the <strong><code>up</code></strong> arrow once, but hey, saying <em>bang bang</em> out loud is a lot more fun.</p>

<ul>
<li>Drop file name from Finder into terminal to get its path &ndash; it can be then copy-pasted into a <strong><code>cd</code></strong> command etc.</li>
</ul>


<p><strong>More ways to navigate Terminal using familiar shortcuts</strong>:</p>

<ul>
<li><p><strong><code>Ctrl + T</code></strong> to open a new tab within the same Terminal session.</p></li>
<li><p><strong><code>Ctrl + F</code></strong> to search your Terminal&rsquo;s tab or session (actual text output thereof).</p></li>
<li><p><strong><code>Command + +</code></strong> or <strong><code>Command + -</code></strong> to zoom in or out.</p></li>
<li><p><strong><code>Command + G</code></strong> to go to a next search match, <strong><code>Command + Shift + G</code></strong> to go to a previous match.</p></li>
<li><p><strong><code>Control + C</code></strong> or <strong><code>Command + .</code></strong> to cancel a command. Rails developers use that a lot to stop Rails server from running, for instance.</p></li>
<li><p>Use <strong><code>TAB</code></strong> to autocomplete a directory name. Use <strong><code>TAB</code></strong> <strong><code>TAB</code></strong> to show a list of options when there are multiple matches.</p></li>
</ul>


<p><strong>Who am I, where am I, and what time is it anyway?</strong></p>

<ul>
<li><strong><code>pwd</code></strong> to see user&rsquo;s current directory:</li>
</ul>


<p><img class="center" src="/images/pwd_use.png"></p>

<ul>
<li><strong><code>whoami</code></strong> to see username of the owner of the current login/connection session in the shell (or in manual&rsquo;s words, &ldquo;display effective user id&rdquo;)</li>
</ul>


<p><img class="center" src="/images/whoami.png"></p>

<ul>
<li>While <strong><code>whoami</code></strong> is a very commonly listed command in all of the top-20-Terminal-commands-you-must-learn-now list, its cousins <strong><code>WhoAmI</code></strong> and <strong><code>who am i</code></strong> are less known:</li>
</ul>


<p><img class="center" src="/images/whoami_variations.png"></p>

<p>(There is no manual entry on <strong><code>WhoAmI</code></strong>, and that seems like a pretty rare command in general.)</p>

<ul>
<li>Another cousin <strong><code>who</code></strong> displays a more expanded version of <strong><code>who am i</code></strong>, effectivly showing all users that are currently logged in into a terminal session:</li>
</ul>


<p><img class="center" src="/images/who.png"></p>

<ul>
<li>And yet another cousin <strong><code>w</code></strong> &ldquo;displays who is logged in and what they are doing:</li>
</ul>


<p><img class="center" src="/images/w_command.png"></p>

<ul>
<li><strong><code>date</code></strong> to see current date and time:</li>
</ul>


<p><img class="center" src="/images/date_command.png"></p>

<p><strong>How do I get around?</strong></p>

<ul>
<li><p><strong><code>cd directory_name</code></strong> or <strong><code>cd path/to/directory</code></strong> to move to a different directory</p></li>
<li><p><strong><code>TAB</code></strong> can be used with <strong><code>cd</code></strong> to autocomplete a directory name, but using an asterix (*) as a wildcard also works:</p></li>
</ul>


<p><img class="center" src="/images/cd_wild_card.png"></p>

<ul>
<li><strong><code>?characters</code></strong> to search for a specific name:</li>
</ul>


<p><img class="center" src="/images/cd_wild_card.png"></p>

<ul>
<li><p><strong><code>cd ..</code></strong> to move up one directory, <strong><code>cd ../..</code></strong>  to move up two directories, and so forth.</p></li>
<li><p><strong><code>cd ~</code></strong> or just <strong><code>cd</code></strong> to go to your home directory.</p></li>
<li><p><strong><code>cd /</code></strong> to go to the level of your file hierarchy (this is not the same as home):</p></li>
</ul>


<p><img class="center" src="/images/root_vs_top.png"></p>

<ul>
<li><strong><code>cd -</code></strong> to go to the last visited directory:</li>
</ul>


<p><img class="center" src="/images/cd_minus.png"></p>

<ul>
<li>Note on case sensitivity: generally, names of files and directories (so that <strong><code>cd octopress</code></strong> is the same as <strong><code>cd Octopress</code></strong>) are not case sensitive unless you have specially set up your system to be that way.</li>
</ul>


<p><strong>So what am I seeing in here?</strong></p>

<ul>
<li><strong><code>ls</code></strong> to see a list of files in your directory (or <strong><code>ls directory/path</code></strong> for another directory)</li>
</ul>


<p><img class="center" src="/images/octopress_ls.png"></p>

<ul>
<li><strong><code>ls -l</code></strong> to see a <em>l</em>ong list of files, including creation dates and access permissions, number of links in the item, etc:</li>
</ul>


<p><img class="center" src="/images/du_sh.png"></p>

<ul>
<li><strong><code>ls -lh</code></strong> or <strong><code>ls -l -h</code></strong> (flags can be combined) to see a <em>h</em>uman readable output as long list. In this case, the only thing that changes is size in bytes is converted into units that make more sense such as kilobytes. Note that <strong><code>-h</code></strong> flag can be use with some other commands as well.</li>
</ul>


<p><img class="center" src="/images/ls_lh.png"></p>

<p>(Try running <strong><code>ls</code></strong> first, then <strong><code>!! -l</code></strong>, then <strong><code>!! -h</code></strong> to stack these commands. Or just press an <strong><code>up</code></strong> key and add those flags before hitting enter).</p>

<ul>
<li><p><strong><code>ls /</code></strong> (or any other <strong><code>ls</code></strong> command with a <strong><code>flag</code></strong> and <strong><code>/</code></strong>) to see contents of home directory. Note that normally, you have to be in the directory which contents you are trying to view.</p></li>
<li><p><strong><code>du -sh directory_name</code></strong> to see size of a directory:</p></li>
</ul>


<p><img class="center" src="/images/date_command.png"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac Uptime and Reboot Stats]]></title>
    <link href="http://annaershova.github.io/blog/2015/10/12/mac-uptime-and-reboot-stats/"/>
    <updated>2015-10-12T11:46:01-04:00</updated>
    <id>http://annaershova.github.io/blog/2015/10/12/mac-uptime-and-reboot-stats</id>
    <content type="html"><![CDATA[<p>While we are on a subject of controlling your Mac from your Terminal, here is something else that is useful:</p>

<p>Mac uptime is how long it has been since the system has been re-booted or re-started. Type in <strong><code>uptime</code></strong> in your Terminal, and you will see the stats in minutes, hours, or days, depending on how long it has been for your Mac:</p>

<p><img class="center" src="/images/uptime.png"></p>

<p>(I just re-booted when installing a new OS X hence such a short uptime for me. Uptime can extend into months for some users as Macs tend to be very stable unlike Windows machines.)</p>

<p>You will also see number of users using your machine during said uptime as well as load averages in 1, 5, and 15 minute intervals from left to right &ndash; mine actually indicate I may want a more powerful system.</p>

<p>Run <strong><code>last reboot</code></strong>  to see rebooting history:</p>

<p><img class="center" src="/images/lastreboot.png"></p>

<p>Another neat trick is to run in <strong><code>last</code></strong> to see last sessions of users, hosts and ttys in a reverse chronological order:</p>

<p><img class="center" src="/images/last.png"></p>

<p>There are handy gadgets for uptime and reboot stats, but I doubt that most regular users would really need them on a regular basis. Checking in with your Terminal now and then should be sufficient.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Updating OS X From Your Command Line]]></title>
    <link href="http://annaershova.github.io/blog/2015/10/12/updating-os-x-from-your-command-line/"/>
    <updated>2015-10-12T11:16:32-04:00</updated>
    <id>http://annaershova.github.io/blog/2015/10/12/updating-os-x-from-your-command-line</id>
    <content type="html"><![CDATA[<p>I am really used to seeing a pop up that says something along the lines of <strong><code>a new version of OS X / iOS is available, do you want to update now?</code></strong></p>

<p>Upon some research on potential issues of an update in question (I learned the hard way after having my iPhone bricked post-update when living in China), I generally go back and click <strong><code>update</code></strong>. But there is actually an easy way to do it from your Terminal. All you need is a <strong><code>softwareupdate</code></strong> command.</p>

<p>Type in <strong><code>man softwareupdate</code></strong> to see this command&rsquo;s manual:</p>

<p><img class="center" src="/images/softwareupdatemanual.png"></p>

<p>Run <strong><code>softwareupdate -l</code></strong> to see available updates. You will see something like this:</p>

<p><img class="center" src="/images/softwareupdate_l.png"></p>

<p>While you are at it, you can turn on automatic update checker from your Terminal: <strong><code>sudo softwareupdate --schedule on</code></strong> (<strong><code>off</code></strong> to disable it).</p>

<p><img class="center" src="/images/softwareupdateautomaticcheck.png"></p>

<p>Then run this to install the specific update you want: <strong><code>sudo softwareupdate --install UPDATE_NAME</code></strong></p>

<p><img class="center" src="/images/supdinstall.png"></p>

<p>(Use the <strong><code>-d</code></strong> flag to just download the update, but not install it.)</p>

<p>And of course to re-boot your computer, you can simply run this command instead of going through the Mac menu: <strong><code>sudo shutdown -r now</code></strong></p>

<p><img class="center" src="/images/shutdown.png"></p>

<p>Voila!</p>
]]></content>
  </entry>
  
</feed>
